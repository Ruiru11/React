{"version":3,"sources":["components/TodoItem.js","components/Todos.js","components/layout/Header.js","components/AddTodo.js","components/pages/About.js","App.js","serviceWorker.js","index.js"],"names":["TodoItem","getStyle","background","fontSize","padding","borderBottom","textDecoration","_this","props","todo","completed","_this$props$todo","this","id","title","react_default","a","createElement","style","type","onChange","markComplete","bind","onClick","delTodo","btnSyle","Component","color","border","borderRadius","cursor","float","Todos","todos","map","components_TodoItem","key","headerStyle","textAlign","linkStyle","Header","Link","to","AddTodo","_Component","_getPrototypeOf2","Object","classCallCheck","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","onSubmit","e","preventDefault","addTodo","setState","target","value","inherits","createClass","width","name","placeholder","className","About","Fragment","App","axios","delete","then","res","toConsumableArray","filter","post","data","_this2","get","_this3","BrowserRouter","layout_Header","Route","exact","path","render","components_AddTodo","components_Todos","component","Boolean","window","location","hostname","match","ReactDOM","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.89045ee4.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nclass TodoItem extends Component {\n  getStyle = () => {\n      return {\n          background: 'lightgrey',\n          fontSize: '20px',\n          padding: '15px',\n          borderBottom: '2px #ccc dotted',\n          textDecoration: this.props.todo.completed ? \n          'line-through' : 'none'\n      }\n  }\n\n  render() {\n    const { id, title } = this.props.todo;\n    return (\n        <div style={this.getStyle()}>\n            <p>\n            <input type=\"checkbox\" onChange={this.props.markComplete.bind\n            (this, id)}/> {'  '}  \n            { title }\n            <button onClick={this.props.delTodo.bind(this,id)} style={ btnSyle }>X</button>\n            </p>\n        </div>\n    )\n  }\n}\n\nconst btnSyle = {\n    background: 'red',\n    color: \"white\",\n    border: \"none\",\n    padding: \"5px 10px\",\n    borderRadius: '50%',\n    cursor: \"pointer\",\n    float:'right'\n}\n\nTodoItem.propTypes = {\n    todo:PropTypes.object.isRequired,\n    markComplete:PropTypes.func.isRequired,\n    delTodo:PropTypes.func.isRequired, \n}\nexport default TodoItem;","import React, { Component } from 'react';\nimport TodoItem from './TodoItem';\nimport PropTypes from 'prop-types';\n\nclass Todos extends Component {\n  render() {\n    return this.props.todos.map((todo)=>(\n      <TodoItem key={todo.id} todo={todo} markComplete={this.props.markComplete} delTodo={this.props.delTodo}/>\n    ));\n  }\n}\n\nTodos.propTypes = {\n    todos:PropTypes.array.isRequired,\n    markComplete:PropTypes.func.isRequired,\n    delTodo:PropTypes.func.isRequired,\n}\n\nexport default Todos;","import React from 'react';\nimport { Link } from 'react-router-dom'\n function Header(){\n     return (\n         <header style={headerStyle}>\n             <h1>TodoList</h1>\n             <Link  style={linkStyle} to=\"/\">Home</Link> | <Link style={linkStyle}  to=\"/about\">About</Link>\n         </header>\n     )\n }\n\n const headerStyle = {\n    color:'red',\n    textAlign:'center',\n    background:'black',\n    padding:\"10px\"\n  }\n\n  const linkStyle = {\n      color:\"white\"\n  }\n export default Header;","import React, {Component } from \"react\";\nimport PropTypes from 'prop-types';\n\nexport class AddTodo extends Component{\n    state = {\n        title:\"\"\n    }\n\n    onSubmit= (e) => {\n        e.preventDefault();\n        this.props.addTodo(this.state.title);\n        this.setState({title:\"\"})\n    }\n    onChange = (e) => this.setState({title:e.target.value});\n\n    render(){\n        return(\n            <form onSubmit={this.onSubmit}>\n                <input\n                    value={this.state.title}\n                    onChange={this.onChange}\n                    style = {{padding:\"10px \", width:\"50%\"}}\n                    type=\"text\"\n                    name=\"title\"\n                    placeholder=\"Add Todo item\">\n                    \n                </input>\n                <input \n                    type=\"submit\" \n                    value=\"submit\" \n                    className=\"btn\">\n                    \n               \n                    </input>\n            </form>\n        )\n    }\n}\n\nAddTodo.propTypes = {\n    addTodo:PropTypes.object.isRequired,\n     \n} \n\nexport default AddTodo;","import React from 'react';\n\nfunction About(){\n    return (\n        <React.Fragment>\n            <h1>\n                This is a react follow through project\n                from travesy Media\n            </h1>\n        </React.Fragment>\n    )\n}\n\n\n \n\nexport default About;","import React, { Component } from 'react';\nimport { BrowserRouter as Router, Route } from 'react-router-dom'   ;\nimport Todos from './components/Todos'; \nimport Header  from './components/layout/Header';\nimport AddTodo from './components/AddTodo'; \nimport About  from './components/pages/About';\nimport './App.css';\nimport axios from 'axios'; \n\n\nclass App extends Component {\n  state = {\n    todos:[]\n  }\n  componentDidMount(){\n    axios.get('https://jsonplaceholder.typicode.com/todos?_limit=15').then\n    (res => this.setState({ todos: res.data }))}\n\n  markComplete = (id) => {\n    this.setState({todos:this.state.todos.map(todo =>{ \n      if(todo.id === id){\n          todo.completed = !todo.completed\n      }\n      return todo;  \n    })});\n  }\n\n  delTodo = (id) => {\n    axios.delete(`https://jsonplaceholder.typicode.com/todos/${id}`).then\n    ( res => this.setState({todos:[...this.state.todos.filter(todo => todo.id!==id )]}))\n\n    this.setState({todos:[...this.state.todos.filter(todo => todo.id!==id )]})\n  }\n\n  addTodo = (title) => {\n    axios.post('https://jsonplaceholder.typicode.com/todos', {\n      title,\n      completed:false \n    }).then(res => this.setState({ todos:[\n      ...this.state.todos,res.data\n    ]}));\n    }\n  render() {\n    return (\n      <Router>\n        <div className=\"App\">\n          <div className=\"container\">\n                <Header />  \n                <Route exact path=\"/\" render={props => (\n                  <React.Fragment>\n                    <AddTodo addTodo={this.addTodo} />\n                   <Todos todos={this.state.todos} markComplete={this.markComplete} delTodo={this.delTodo}/>\n                  </React.Fragment>) } />\n                <Route path=\"/about\" component={About} /> \n          </div>\n        </div>\n      </Router>        \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}